{"ast":null,"code":"var _jsxFileName = \"/Users/parthasridhar/Desktop/Stock SME Project/src/components/SMAGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { ArrowLeft, TrendingUp, Calendar, DollarSign, BarChart3, ChevronLeft, ChevronRight } from 'lucide-react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, ComposedChart } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphContainer = styled.div`\n  background: rgba(15, 15, 15, 0.8);\n  border-radius: 16px;\n  padding: 24px;\n  box-shadow: 0 4px 24px rgba(0, 0, 0, 0.4);\n  backdrop-filter: blur(20px);\n  border: 1px solid rgba(255, 255, 255, 0.05);\n`;\n_c = GraphContainer;\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 30px;\n`;\n_c2 = Header;\nconst BackButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 12px 20px;\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 12px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  color: rgba(255, 255, 255, 0.8);\n  font-weight: 300;\n  backdrop-filter: blur(10px);\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.1);\n    border-color: rgba(255, 255, 255, 0.2);\n    color: #ffffff;\n  }\n`;\n_c3 = BackButton;\nconst Title = styled.h2`\n  color: #ffffff;\n  margin: 0;\n  font-size: 1.5rem;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  font-weight: 600;\n  letter-spacing: -0.3px;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);\n`;\n_c4 = Title;\nconst YearIndicator = styled.div`\n  position: absolute;\n  top: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: rgba(102, 126, 234, 0.2);\n  border: 1px solid rgba(102, 126, 234, 0.4);\n  border-radius: 10px;\n  padding: 10px 15px;\n  color: #667eea;\n  font-weight: 600;\n  font-size: 1.1rem;\n  z-index: 10;\n`;\nconst TimeRangeSelector = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  background: rgba(15, 15, 15, 0.8);\n  border: 1px solid rgba(255, 255, 255, 0.05);\n  border-radius: 12px;\n  padding: 16px;\n  backdrop-filter: blur(20px);\n  z-index: 10;\n`;\n_c5 = TimeRangeSelector;\nconst TimeRangeTitle = styled.h4`\n  color: #ffffff;\n  margin: 0 0 10px 0;\n  font-size: 1rem;\n`;\n_c6 = TimeRangeTitle;\nconst TimeRangeInputs = styled.div`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n_c7 = TimeRangeInputs;\nconst PresetButtons = styled.div`\n  display: flex;\n  gap: 5px;\n  margin-top: 10px;\n  flex-wrap: wrap;\n`;\n_c8 = PresetButtons;\nconst PresetButton = styled.button`\n  padding: 5px 10px;\n  background: rgba(102, 126, 234, 0.2);\n  border: 1px solid rgba(102, 126, 234, 0.4);\n  border-radius: 5px;\n  color: #667eea;\n  cursor: pointer;\n  font-size: 0.8rem;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: rgba(102, 126, 234, 0.3);\n    border-color: #667eea;\n  }\n`;\n_c9 = PresetButton;\nconst DateInput = styled.input`\n  background: #1a1a1a;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  border-radius: 5px;\n  padding: 8px;\n  color: #ffffff;\n  font-size: 0.9rem;\n\n  &:focus {\n    outline: none;\n    border-color: #667eea;\n  }\n`;\n_c0 = DateInput;\nconst SMALegend = styled.div`\n  background: rgba(15, 15, 15, 0.6);\n  border: 1px solid rgba(255, 255, 255, 0.05);\n  border-radius: 12px;\n  padding: 20px;\n  margin-bottom: 24px;\n  backdrop-filter: blur(20px);\n`;\n_c1 = SMALegend;\nconst LegendTitle = styled.h3`\n  color: #ffffff;\n  margin: 0 0 16px 0;\n  font-size: 1rem;\n  font-weight: 300;\n`;\n_c10 = LegendTitle;\nconst SMAList = styled.div`\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n`;\n_c11 = SMAList;\nconst SMAButton = styled.button`\n  padding: 10px 16px;\n  background: ${props => props.active ? 'rgba(255, 255, 255, 0.15)' : 'rgba(255, 255, 255, 0.05)'};\n  border: 1px solid ${props => props.active ? 'rgba(255, 255, 255, 0.3)' : 'rgba(255, 255, 255, 0.1)'};\n  border-radius: 10px;\n  color: ${props => props.active ? '#ffffff' : 'rgba(255, 255, 255, 0.7)'};\n  cursor: pointer;\n  font-weight: 300;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  backdrop-filter: blur(10px);\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.1);\n    border-color: rgba(255, 255, 255, 0.2);\n    color: #ffffff;\n  }\n`;\n_c12 = SMAButton;\nconst ScrollContainer = styled.div`\n  position: relative;\n  overflow-x: auto;\n  overflow-y: hidden;\n  width: 100%;\n  height: 500px;\n  border: 1px solid rgba(255, 255, 255, 0.05);\n  border-radius: 12px;\n  \n  scrollbar-width: thin;\n  scrollbar-color: rgba(102, 126, 234, 0.8) rgba(255, 255, 255, 0.1);\n  \n  &::-webkit-scrollbar {\n    height: 16px;\n    width: 16px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: rgba(255, 255, 255, 0.1);\n    border-radius: 8px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background: rgba(102, 126, 234, 0.8);\n    border-radius: 8px;\n    border: 2px solid rgba(30, 30, 30, 0.8);\n    min-width: 20px;\n  }\n  \n  &::-webkit-scrollbar-thumb:hover {\n    background: rgba(102, 126, 234, 1);\n  }\n  \n  &::-webkit-scrollbar-corner {\n    background: rgba(30, 30, 30, 0.8);\n  }\n`;\n_c13 = ScrollContainer;\nconst ChartWrapper = styled.div`\n  min-width: ${props => props.minWidth || '1200px'};\n  height: 100%;\n`;\n_c14 = ChartWrapper;\nconst ScrollIndicator = styled.div`\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n  background: rgba(30, 30, 30, 0.8);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  border-radius: 5px;\n  padding: 5px 10px;\n  color: #cccccc;\n  font-size: 0.8rem;\n  z-index: 10;\n`;\n_c15 = ScrollIndicator;\nconst ScaleIndicator = styled.div`\n  position: absolute;\n  bottom: 50px;\n  left: 10px;\n  background: rgba(102, 126, 234, 0.2);\n  border: 1px solid rgba(102, 126, 234, 0.4);\n  border-radius: 5px;\n  padding: 5px 10px;\n  color: #667eea;\n  font-size: 0.8rem;\n  z-index: 10;\n`;\nconst ScrollControls = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin-top: 10px;\n`;\nconst ScrollButton = styled.button`\n  padding: 8px 12px;\n  background: rgba(102, 126, 234, 0.2);\n  border: 1px solid rgba(102, 126, 234, 0.4);\n  border-radius: 5px;\n  color: #667eea;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n\n  &:hover {\n    background: rgba(102, 126, 234, 0.3);\n    border-color: #667eea;\n  }\n`;\nconst SMAGraph = ({\n  company,\n  data,\n  onBack\n}) => {\n  _s();\n  const [selectedSMAs, setSelectedSMAs] = useState([10, 20, 30]);\n  const [currentYear, setCurrentYear] = useState(null);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [activeIndex, setActiveIndex] = useState(null);\n  const priceChartRef = useRef(null);\n  const percentageChartRef = useRef(null);\n  const availableSMAs = [10, 20, 30, 40, 50, 100];\n  const smaColors = {\n    10: '#ff4757',\n    // Bright Red\n    20: '#2ed573',\n    // Bright Green\n    30: '#1e90ff',\n    // Bright Blue\n    40: '#ffa502',\n    // Bright Orange\n    50: '#ff6348',\n    // Bright Coral\n    100: '#9c88ff' // Bright Purple\n  };\n  const processedData = useMemo(() => {\n    if (!data) return [];\n    return data.filter(item => {\n      // Check if at least one selected SMA has data\n      return selectedSMAs.some(sma => item[`SMA_${sma}`] !== null);\n    }).map(item => {\n      const result = {\n        date: new Date(item.Date),\n        price: parseFloat(item.Adjusted_Close)\n      };\n\n      // Add selected SMAs\n      selectedSMAs.forEach(sma => {\n        const smaValue = item[`SMA_${sma}`] ? parseFloat(item[`SMA_${sma}`]) : null;\n        result[`sma${sma}`] = smaValue;\n\n        // Calculate percentage difference\n        if (smaValue !== null) {\n          result[`diff${sma}`] = (result.price - smaValue) / smaValue * 100;\n        } else {\n          result[`diff${sma}`] = null;\n        }\n      });\n      return result;\n    });\n  }, [data, selectedSMAs]);\n\n  // Initialize with first year of data\n  useEffect(() => {\n    if (processedData.length > 0 && !currentYear) {\n      const firstDate = processedData[0].date;\n      const year = firstDate.getFullYear();\n      setCurrentYear(year);\n      setStartDate(`${year}-01-01`);\n      setEndDate(`${year}-12-31`);\n    }\n  }, [processedData, currentYear]);\n\n  // Filter data based on time range\n  const filteredData = useMemo(() => {\n    if (!processedData.length) return processedData;\n    if (startDate && endDate) {\n      const start = new Date(startDate);\n      const end = new Date(endDate);\n      return processedData.filter(item => {\n        const itemDate = new Date(item.date);\n        return itemDate >= start && itemDate <= end;\n      });\n    }\n    return processedData;\n  }, [processedData, startDate, endDate]);\n\n  // Calculate dynamic Y-axis scale for price chart\n  const priceScale = useMemo(() => {\n    if (!filteredData.length) return {\n      min: 0,\n      max: 100\n    };\n    const prices = filteredData.map(d => d.price);\n    const smaValues = [];\n    selectedSMAs.forEach(sma => {\n      filteredData.forEach(d => {\n        if (d[`sma${sma}`] !== null) {\n          smaValues.push(d[`sma${sma}`]);\n        }\n      });\n    });\n    const allValues = [...prices, ...smaValues];\n    const min = Math.min(...allValues);\n    const max = Math.max(...allValues);\n    const padding = (max - min) * 0.05;\n    return {\n      min: Math.max(0, min - padding),\n      max: max + padding\n    };\n  }, [filteredData, selectedSMAs]);\n\n  // Calculate dynamic Y-axis scale for percentage chart\n  const percentageScale = useMemo(() => {\n    if (!filteredData.length) return {\n      min: -10,\n      max: 10\n    };\n    const percentages = [];\n    selectedSMAs.forEach(sma => {\n      filteredData.forEach(d => {\n        if (d[`diff${sma}`] !== null) {\n          percentages.push(d[`diff${sma}`]);\n        }\n      });\n    });\n    if (percentages.length === 0) return {\n      min: -10,\n      max: 10\n    };\n    const min = Math.min(...percentages);\n    const max = Math.max(...percentages);\n    const padding = Math.max(Math.abs(min), Math.abs(max)) * 0.1;\n    return {\n      min: min - padding,\n      max: max + padding\n    };\n  }, [filteredData, selectedSMAs]);\n\n  // Handle SMA selection\n  const toggleSMA = sma => {\n    setSelectedSMAs(prev => prev.includes(sma) ? prev.filter(s => s !== sma) : [...prev, sma].sort((a, b) => a - b));\n  };\n\n  // Handle synchronized hover\n  const handleSynchronizedHover = (data, index) => {\n    setActiveIndex(index);\n  };\n\n  // Sync scroll between charts\n  const handleScroll = (sourceRef, targetRef) => {\n    if (sourceRef.current && targetRef.current) {\n      const sourceScrollLeft = sourceRef.current.scrollLeft;\n      targetRef.current.scrollLeft = sourceScrollLeft;\n    }\n  };\n\n  // Handle date range changes\n  const handleDateRangeChange = (newStartDate, newEndDate) => {\n    setStartDate(newStartDate);\n    setEndDate(newEndDate);\n    if (newStartDate) {\n      const year = new Date(newStartDate).getFullYear();\n      setCurrentYear(year);\n    }\n  };\n\n  // Handle preset date ranges\n  const handlePresetRange = preset => {\n    const today = new Date();\n    let start, end;\n    switch (preset) {\n      case '1year':\n        start = new Date(today.getFullYear() - 1, today.getMonth(), today.getDate());\n        end = today;\n        break;\n      case '2years':\n        start = new Date(today.getFullYear() - 2, today.getMonth(), today.getDate());\n        end = today;\n        break;\n      case '5years':\n        start = new Date(today.getFullYear() - 5, today.getMonth(), today.getDate());\n        end = today;\n        break;\n      case 'all':\n        if (processedData.length > 0) {\n          start = new Date(processedData[0].date);\n          end = new Date(processedData[processedData.length - 1].date);\n        }\n        break;\n      default:\n        return;\n    }\n    if (start && end) {\n      setStartDate(start.toISOString().split('T')[0]);\n      setEndDate(end.toISOString().split('T')[0]);\n      setCurrentYear(start.getFullYear());\n    }\n  };\n\n  // Get current year display\n  const getCurrentYearDisplay = () => {\n    if (startDate && endDate) {\n      const startYear = new Date(startDate).getFullYear();\n      const endYear = new Date(endDate).getFullYear();\n      if (startYear === endYear) {\n        return `${startYear}`;\n      } else {\n        return `${startYear}-${endYear}`;\n      }\n    }\n    return currentYear ? `${currentYear}` : 'Loading...';\n  };\n\n  // Custom tooltip for price chart with difference values\n  const PriceTooltip = ({\n    active,\n    payload,\n    label\n  }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      const date = new Date(data.date).toLocaleDateString();\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: 'rgba(30, 30, 30, 0.95)',\n          border: '1px solid rgba(255, 255, 255, 0.2)',\n          borderRadius: '8px',\n          padding: '12px',\n          boxShadow: '0 4px 12px rgba(0, 0, 0, 0.4)',\n          color: '#ffffff',\n          minWidth: '200px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontWeight: '600',\n            marginBottom: '8px',\n            color: '#ffffff'\n          },\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '8px',\n            color: '#ffffff',\n            fontSize: '1.1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 13\n          }, this), \" $\", data.price.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 11\n        }, this), selectedSMAs.map(sma => {\n          const value = data[`sma${sma}`];\n          const diff = data[`diff${sma}`];\n          if (value !== null) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: '6px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: smaColors[sma],\n                  fontWeight: '600'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\"SMA \", sma, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 21\n                }, this), \" $\", value.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: diff >= 0 ? '#2ed573' : '#ff4757',\n                  fontSize: '0.9rem',\n                  marginLeft: '10px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Diff:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 517,\n                  columnNumber: 21\n                }, this), \" \", diff >= 0 ? '+' : '', diff.toFixed(2), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 19\n              }, this)]\n            }, sma, true, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 17\n            }, this);\n          }\n          return null;\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n\n  // Custom tooltip for percentage chart with synchronized data\n  const PercentageTooltip = ({\n    active,\n    payload,\n    label\n  }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      const date = new Date(data.date).toLocaleDateString();\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: 'rgba(30, 30, 30, 0.95)',\n          border: '1px solid rgba(255, 255, 255, 0.2)',\n          borderRadius: '8px',\n          padding: '12px',\n          boxShadow: '0 4px 12px rgba(0, 0, 0, 0.4)',\n          color: '#ffffff',\n          minWidth: '200px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontWeight: '600',\n            marginBottom: '8px',\n            color: '#ffffff'\n          },\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '8px',\n            color: '#ffffff',\n            fontSize: '1.1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 13\n          }, this), \" $\", data.price.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, this), selectedSMAs.map(sma => {\n          const value = data[`sma${sma}`];\n          const diff = data[`diff${sma}`];\n          if (diff !== null) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: '6px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: smaColors[sma],\n                  fontWeight: '600'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\"SMA \", sma, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 21\n                }, this), \" $\", value ? value.toFixed(2) : 'N/A']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: diff >= 0 ? '#2ed573' : '#ff4757',\n                  fontSize: '0.9rem',\n                  marginLeft: '10px',\n                  fontWeight: '600'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Diff:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 567,\n                  columnNumber: 21\n                }, this), \" \", diff >= 0 ? '+' : '', diff.toFixed(2), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 19\n              }, this)]\n            }, sma, true, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 17\n            }, this);\n          }\n          return null;\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(GraphContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(BackButton, {\n        onClick: onBack,\n        children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 11\n        }, this), \"Back to Search\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Title, {\n        children: [/*#__PURE__*/_jsxDEV(BarChart3, {\n          size: 32,\n          color: \"#667eea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 11\n        }, this), company === null || company === void 0 ? void 0 : company.ticker, \" - SMA Analysis\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TimeRangeSelector, {\n      children: [/*#__PURE__*/_jsxDEV(TimeRangeTitle, {\n        children: \"Time Range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TimeRangeInputs, {\n        children: [/*#__PURE__*/_jsxDEV(DateInput, {\n          type: \"date\",\n          value: startDate,\n          onChange: e => handleDateRangeChange(e.target.value, endDate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#cccccc'\n          },\n          children: \"to\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DateInput, {\n          type: \"date\",\n          value: endDate,\n          onChange: e => handleDateRangeChange(startDate, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PresetButtons, {\n        children: [/*#__PURE__*/_jsxDEV(PresetButton, {\n          onClick: () => handlePresetRange('1year'),\n          children: \"1 Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PresetButton, {\n          onClick: () => handlePresetRange('2years'),\n          children: \"2 Years\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PresetButton, {\n          onClick: () => handlePresetRange('5years'),\n          children: \"5 Years\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PresetButton, {\n          onClick: () => handlePresetRange('all'),\n          children: \"All Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SMALegend, {\n      children: [/*#__PURE__*/_jsxDEV(LegendTitle, {\n        children: \"Select SMAs to Display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SMAList, {\n        children: availableSMAs.map(sma => /*#__PURE__*/_jsxDEV(SMAButton, {\n          active: selectedSMAs.includes(sma),\n          onClick: () => toggleSMA(sma),\n          style: {\n            borderColor: smaColors[sma]\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '12px',\n              height: '12px',\n              backgroundColor: smaColors[sma],\n              borderRadius: '50%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 15\n          }, this), \"SMA \", sma]\n        }, sma, true, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScrollContainer, {\n      ref: priceChartRef,\n      onScroll: () => handleScroll(priceChartRef, percentageChartRef),\n      children: [/*#__PURE__*/_jsxDEV(ScrollIndicator, {\n        children: [filteredData.length, \" data points\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChartWrapper, {\n        minWidth: `${Math.max(filteredData.length * 4, 1200)}px`,\n        children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(ComposedChart, {\n            data: filteredData,\n            syncId: \"smaCharts\",\n            onMouseMove: (data, index) => handleSynchronizedHover(data, index),\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\",\n              stroke: \"rgba(255, 255, 255, 0.1)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"date\",\n              tick: {\n                fontSize: 12,\n                fill: '#cccccc'\n              },\n              tickFormatter: value => new Date(value).toLocaleDateString(),\n              stroke: \"#cccccc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              tick: {\n                fontSize: 12,\n                fill: '#cccccc'\n              },\n              tickFormatter: value => `$${value.toFixed(0)}`,\n              stroke: \"#cccccc\",\n              domain: [priceScale.min, priceScale.max]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              content: /*#__PURE__*/_jsxDEV(PriceTooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"price\",\n              stroke: \"#ffffff\",\n              strokeWidth: 4,\n              dot: false,\n              name: \"Price\",\n              strokeOpacity: 0.9,\n              activeDot: {\n                r: 8,\n                fill: '#ffffff',\n                stroke: '#ffffff',\n                strokeWidth: 3\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 15\n            }, this), selectedSMAs.map(sma => /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: `sma${sma}`,\n              stroke: smaColors[sma],\n              strokeWidth: 4,\n              dot: false,\n              name: `SMA ${sma}`,\n              strokeOpacity: 0.9,\n              activeDot: {\n                r: 8,\n                fill: smaColors[sma],\n                stroke: smaColors[sma],\n                strokeWidth: 3\n              }\n            }, sma, false, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#ffffff',\n          fontSize: '1.2rem',\n          fontWeight: '600',\n          marginBottom: '15px',\n          display: 'flex',\n          alignItems: 'center',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TrendingUp, {\n          size: 24,\n          color: \"#ff6b6b\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 11\n        }, this), \"Percentage Differences: (Price - SMA) / SMA \\xD7 100%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScrollContainer, {\n        ref: percentageChartRef,\n        onScroll: () => handleScroll(percentageChartRef, priceChartRef),\n        children: [/*#__PURE__*/_jsxDEV(ScrollIndicator, {\n          children: [filteredData.length, \" data points\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChartWrapper, {\n          minWidth: `${Math.max(filteredData.length * 4, 1200)}px`,\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: \"100%\",\n            children: /*#__PURE__*/_jsxDEV(ComposedChart, {\n              data: filteredData,\n              syncId: \"smaCharts\",\n              onMouseMove: (data, index) => handleSynchronizedHover(data, index),\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\",\n                stroke: \"rgba(255, 255, 255, 0.1)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 729,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"date\",\n                tick: {\n                  fontSize: 12,\n                  fill: '#cccccc'\n                },\n                tickFormatter: value => new Date(value).toLocaleDateString(),\n                stroke: \"#cccccc\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 730,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                tick: {\n                  fontSize: 12,\n                  fill: '#cccccc'\n                },\n                tickFormatter: value => `${value.toFixed(1)}%`,\n                stroke: \"#cccccc\",\n                domain: [percentageScale.min, percentageScale.max]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 736,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                content: /*#__PURE__*/_jsxDEV(PercentageTooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 742,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 742,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: () => 0,\n                stroke: \"#666\",\n                strokeDasharray: \"5 5\",\n                strokeWidth: 1,\n                dot: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 745,\n                columnNumber: 17\n              }, this), selectedSMAs.map(sma => /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: `diff${sma}`,\n                stroke: smaColors[sma],\n                strokeWidth: 4,\n                dot: false,\n                name: `SMA ${sma} Diff`,\n                strokeOpacity: 0.9,\n                activeDot: {\n                  r: 8,\n                  fill: smaColors[sma],\n                  stroke: smaColors[sma],\n                  strokeWidth: 3\n                }\n              }, sma, false, {\n                fileName: _jsxFileName,\n                lineNumber: 756,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 724,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 581,\n    columnNumber: 5\n  }, this);\n};\n_s(SMAGraph, \"cpA7Fu9U9xgXdTIxDPjbR0ejrRU=\");\n_c16 = SMAGraph;\nexport default SMAGraph;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16;\n$RefreshReg$(_c, \"GraphContainer\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"BackButton\");\n$RefreshReg$(_c4, \"Title\");\n$RefreshReg$(_c5, \"TimeRangeSelector\");\n$RefreshReg$(_c6, \"TimeRangeTitle\");\n$RefreshReg$(_c7, \"TimeRangeInputs\");\n$RefreshReg$(_c8, \"PresetButtons\");\n$RefreshReg$(_c9, \"PresetButton\");\n$RefreshReg$(_c0, \"DateInput\");\n$RefreshReg$(_c1, \"SMALegend\");\n$RefreshReg$(_c10, \"LegendTitle\");\n$RefreshReg$(_c11, \"SMAList\");\n$RefreshReg$(_c12, \"SMAButton\");\n$RefreshReg$(_c13, \"ScrollContainer\");\n$RefreshReg$(_c14, \"ChartWrapper\");\n$RefreshReg$(_c15, \"ScrollIndicator\");\n$RefreshReg$(_c16, \"SMAGraph\");","map":{"version":3,"names":["React","useState","useMemo","useRef","useEffect","styled","ArrowLeft","TrendingUp","Calendar","DollarSign","BarChart3","ChevronLeft","ChevronRight","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","ComposedChart","jsxDEV","_jsxDEV","GraphContainer","div","_c","Header","_c2","BackButton","button","_c3","Title","h2","_c4","YearIndicator","TimeRangeSelector","_c5","TimeRangeTitle","h4","_c6","TimeRangeInputs","_c7","PresetButtons","_c8","PresetButton","_c9","DateInput","input","_c0","SMALegend","_c1","LegendTitle","h3","_c10","SMAList","_c11","SMAButton","props","active","_c12","ScrollContainer","_c13","ChartWrapper","minWidth","_c14","ScrollIndicator","_c15","ScaleIndicator","ScrollControls","ScrollButton","SMAGraph","company","data","onBack","_s","selectedSMAs","setSelectedSMAs","currentYear","setCurrentYear","startDate","setStartDate","endDate","setEndDate","activeIndex","setActiveIndex","priceChartRef","percentageChartRef","availableSMAs","smaColors","processedData","filter","item","some","sma","map","result","date","Date","price","parseFloat","Adjusted_Close","forEach","smaValue","length","firstDate","year","getFullYear","filteredData","start","end","itemDate","priceScale","min","max","prices","d","smaValues","push","allValues","Math","padding","percentageScale","percentages","abs","toggleSMA","prev","includes","s","sort","a","b","handleSynchronizedHover","index","handleScroll","sourceRef","targetRef","current","sourceScrollLeft","scrollLeft","handleDateRangeChange","newStartDate","newEndDate","handlePresetRange","preset","today","getMonth","getDate","toISOString","split","getCurrentYearDisplay","startYear","endYear","PriceTooltip","payload","label","toLocaleDateString","style","background","border","borderRadius","boxShadow","color","children","fontWeight","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","toFixed","value","diff","marginLeft","PercentageTooltip","onClick","size","ticker","type","onChange","e","target","borderColor","width","height","backgroundColor","ref","onScroll","syncId","onMouseMove","strokeDasharray","stroke","dataKey","tick","fill","tickFormatter","domain","content","strokeWidth","dot","name","strokeOpacity","activeDot","r","marginTop","display","alignItems","gap","_c16","$RefreshReg$"],"sources":["/Users/parthasridhar/Desktop/Stock SME Project/src/components/SMAGraph.js"],"sourcesContent":["import React, { useState, useMemo, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { ArrowLeft, TrendingUp, Calendar, DollarSign, BarChart3, ChevronLeft, ChevronRight } from 'lucide-react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, ComposedChart } from 'recharts';\n\nconst GraphContainer = styled.div`\n  background: rgba(15, 15, 15, 0.8);\n  border-radius: 16px;\n  padding: 24px;\n  box-shadow: 0 4px 24px rgba(0, 0, 0, 0.4);\n  backdrop-filter: blur(20px);\n  border: 1px solid rgba(255, 255, 255, 0.05);\n`;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 30px;\n`;\n\nconst BackButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 12px 20px;\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 12px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  color: rgba(255, 255, 255, 0.8);\n  font-weight: 300;\n  backdrop-filter: blur(10px);\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.1);\n    border-color: rgba(255, 255, 255, 0.2);\n    color: #ffffff;\n  }\n`;\n\nconst Title = styled.h2`\n  color: #ffffff;\n  margin: 0;\n  font-size: 1.5rem;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  font-weight: 600;\n  letter-spacing: -0.3px;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);\n`;\n\nconst YearIndicator = styled.div`\n  position: absolute;\n  top: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: rgba(102, 126, 234, 0.2);\n  border: 1px solid rgba(102, 126, 234, 0.4);\n  border-radius: 10px;\n  padding: 10px 15px;\n  color: #667eea;\n  font-weight: 600;\n  font-size: 1.1rem;\n  z-index: 10;\n`;\n\nconst TimeRangeSelector = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  background: rgba(15, 15, 15, 0.8);\n  border: 1px solid rgba(255, 255, 255, 0.05);\n  border-radius: 12px;\n  padding: 16px;\n  backdrop-filter: blur(20px);\n  z-index: 10;\n`;\n\nconst TimeRangeTitle = styled.h4`\n  color: #ffffff;\n  margin: 0 0 10px 0;\n  font-size: 1rem;\n`;\n\nconst TimeRangeInputs = styled.div`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nconst PresetButtons = styled.div`\n  display: flex;\n  gap: 5px;\n  margin-top: 10px;\n  flex-wrap: wrap;\n`;\n\nconst PresetButton = styled.button`\n  padding: 5px 10px;\n  background: rgba(102, 126, 234, 0.2);\n  border: 1px solid rgba(102, 126, 234, 0.4);\n  border-radius: 5px;\n  color: #667eea;\n  cursor: pointer;\n  font-size: 0.8rem;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: rgba(102, 126, 234, 0.3);\n    border-color: #667eea;\n  }\n`;\n\nconst DateInput = styled.input`\n  background: #1a1a1a;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  border-radius: 5px;\n  padding: 8px;\n  color: #ffffff;\n  font-size: 0.9rem;\n\n  &:focus {\n    outline: none;\n    border-color: #667eea;\n  }\n`;\n\nconst SMALegend = styled.div`\n  background: rgba(15, 15, 15, 0.6);\n  border: 1px solid rgba(255, 255, 255, 0.05);\n  border-radius: 12px;\n  padding: 20px;\n  margin-bottom: 24px;\n  backdrop-filter: blur(20px);\n`;\n\nconst LegendTitle = styled.h3`\n  color: #ffffff;\n  margin: 0 0 16px 0;\n  font-size: 1rem;\n  font-weight: 300;\n`;\n\nconst SMAList = styled.div`\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n`;\n\nconst SMAButton = styled.button`\n  padding: 10px 16px;\n  background: ${props => props.active ? 'rgba(255, 255, 255, 0.15)' : 'rgba(255, 255, 255, 0.05)'};\n  border: 1px solid ${props => props.active ? 'rgba(255, 255, 255, 0.3)' : 'rgba(255, 255, 255, 0.1)'};\n  border-radius: 10px;\n  color: ${props => props.active ? '#ffffff' : 'rgba(255, 255, 255, 0.7)'};\n  cursor: pointer;\n  font-weight: 300;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  backdrop-filter: blur(10px);\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.1);\n    border-color: rgba(255, 255, 255, 0.2);\n    color: #ffffff;\n  }\n`;\n\nconst ScrollContainer = styled.div`\n  position: relative;\n  overflow-x: auto;\n  overflow-y: hidden;\n  width: 100%;\n  height: 500px;\n  border: 1px solid rgba(255, 255, 255, 0.05);\n  border-radius: 12px;\n  \n  scrollbar-width: thin;\n  scrollbar-color: rgba(102, 126, 234, 0.8) rgba(255, 255, 255, 0.1);\n  \n  &::-webkit-scrollbar {\n    height: 16px;\n    width: 16px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: rgba(255, 255, 255, 0.1);\n    border-radius: 8px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background: rgba(102, 126, 234, 0.8);\n    border-radius: 8px;\n    border: 2px solid rgba(30, 30, 30, 0.8);\n    min-width: 20px;\n  }\n  \n  &::-webkit-scrollbar-thumb:hover {\n    background: rgba(102, 126, 234, 1);\n  }\n  \n  &::-webkit-scrollbar-corner {\n    background: rgba(30, 30, 30, 0.8);\n  }\n`;\n\nconst ChartWrapper = styled.div`\n  min-width: ${props => props.minWidth || '1200px'};\n  height: 100%;\n`;\n\nconst ScrollIndicator = styled.div`\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n  background: rgba(30, 30, 30, 0.8);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  border-radius: 5px;\n  padding: 5px 10px;\n  color: #cccccc;\n  font-size: 0.8rem;\n  z-index: 10;\n`;\n\nconst ScaleIndicator = styled.div`\n  position: absolute;\n  bottom: 50px;\n  left: 10px;\n  background: rgba(102, 126, 234, 0.2);\n  border: 1px solid rgba(102, 126, 234, 0.4);\n  border-radius: 5px;\n  padding: 5px 10px;\n  color: #667eea;\n  font-size: 0.8rem;\n  z-index: 10;\n`;\n\nconst ScrollControls = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin-top: 10px;\n`;\n\nconst ScrollButton = styled.button`\n  padding: 8px 12px;\n  background: rgba(102, 126, 234, 0.2);\n  border: 1px solid rgba(102, 126, 234, 0.4);\n  border-radius: 5px;\n  color: #667eea;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n\n  &:hover {\n    background: rgba(102, 126, 234, 0.3);\n    border-color: #667eea;\n  }\n`;\n\nconst SMAGraph = ({ company, data, onBack }) => {\n  const [selectedSMAs, setSelectedSMAs] = useState([10, 20, 30]);\n  const [currentYear, setCurrentYear] = useState(null);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [activeIndex, setActiveIndex] = useState(null);\n  const priceChartRef = useRef(null);\n  const percentageChartRef = useRef(null);\n\n  const availableSMAs = [10, 20, 30, 40, 50, 100];\n  const smaColors = {\n    10: '#ff4757',  // Bright Red\n    20: '#2ed573',  // Bright Green\n    30: '#1e90ff',  // Bright Blue\n    40: '#ffa502',  // Bright Orange\n    50: '#ff6348',  // Bright Coral\n    100: '#9c88ff'  // Bright Purple\n  };\n\n  const processedData = useMemo(() => {\n    if (!data) return [];\n    \n    return data\n      .filter(item => {\n        // Check if at least one selected SMA has data\n        return selectedSMAs.some(sma => item[`SMA_${sma}`] !== null);\n      })\n      .map(item => {\n        const result = {\n          date: new Date(item.Date),\n          price: parseFloat(item.Adjusted_Close)\n        };\n        \n        // Add selected SMAs\n        selectedSMAs.forEach(sma => {\n          const smaValue = item[`SMA_${sma}`] ? parseFloat(item[`SMA_${sma}`]) : null;\n          result[`sma${sma}`] = smaValue;\n          \n          // Calculate percentage difference\n          if (smaValue !== null) {\n            result[`diff${sma}`] = ((result.price - smaValue) / smaValue) * 100;\n          } else {\n            result[`diff${sma}`] = null;\n          }\n        });\n        \n        return result;\n      });\n  }, [data, selectedSMAs]);\n\n  // Initialize with first year of data\n  useEffect(() => {\n    if (processedData.length > 0 && !currentYear) {\n      const firstDate = processedData[0].date;\n      const year = firstDate.getFullYear();\n      setCurrentYear(year);\n      setStartDate(`${year}-01-01`);\n      setEndDate(`${year}-12-31`);\n    }\n  }, [processedData, currentYear]);\n\n  // Filter data based on time range\n  const filteredData = useMemo(() => {\n    if (!processedData.length) return processedData;\n    \n    if (startDate && endDate) {\n      const start = new Date(startDate);\n      const end = new Date(endDate);\n      \n      return processedData.filter(item => {\n        const itemDate = new Date(item.date);\n        return itemDate >= start && itemDate <= end;\n      });\n    }\n    \n    return processedData;\n  }, [processedData, startDate, endDate]);\n\n  // Calculate dynamic Y-axis scale for price chart\n  const priceScale = useMemo(() => {\n    if (!filteredData.length) return { min: 0, max: 100 };\n    \n    const prices = filteredData.map(d => d.price);\n    const smaValues = [];\n    selectedSMAs.forEach(sma => {\n      filteredData.forEach(d => {\n        if (d[`sma${sma}`] !== null) {\n          smaValues.push(d[`sma${sma}`]);\n        }\n      });\n    });\n    \n    const allValues = [...prices, ...smaValues];\n    const min = Math.min(...allValues);\n    const max = Math.max(...allValues);\n    \n    const padding = (max - min) * 0.05;\n    \n    return {\n      min: Math.max(0, min - padding),\n      max: max + padding\n    };\n  }, [filteredData, selectedSMAs]);\n\n  // Calculate dynamic Y-axis scale for percentage chart\n  const percentageScale = useMemo(() => {\n    if (!filteredData.length) return { min: -10, max: 10 };\n    \n    const percentages = [];\n    selectedSMAs.forEach(sma => {\n      filteredData.forEach(d => {\n        if (d[`diff${sma}`] !== null) {\n          percentages.push(d[`diff${sma}`]);\n        }\n      });\n    });\n    \n    if (percentages.length === 0) return { min: -10, max: 10 };\n    \n    const min = Math.min(...percentages);\n    const max = Math.max(...percentages);\n    \n    const padding = Math.max(Math.abs(min), Math.abs(max)) * 0.1;\n    \n    return {\n      min: min - padding,\n      max: max + padding\n    };\n  }, [filteredData, selectedSMAs]);\n\n  // Handle SMA selection\n  const toggleSMA = (sma) => {\n    setSelectedSMAs(prev => \n      prev.includes(sma) \n        ? prev.filter(s => s !== sma)\n        : [...prev, sma].sort((a, b) => a - b)\n    );\n  };\n\n  // Handle synchronized hover\n  const handleSynchronizedHover = (data, index) => {\n    setActiveIndex(index);\n  };\n\n  // Sync scroll between charts\n  const handleScroll = (sourceRef, targetRef) => {\n    if (sourceRef.current && targetRef.current) {\n      const sourceScrollLeft = sourceRef.current.scrollLeft;\n      targetRef.current.scrollLeft = sourceScrollLeft;\n    }\n  };\n\n  // Handle date range changes\n  const handleDateRangeChange = (newStartDate, newEndDate) => {\n    setStartDate(newStartDate);\n    setEndDate(newEndDate);\n    \n    if (newStartDate) {\n      const year = new Date(newStartDate).getFullYear();\n      setCurrentYear(year);\n    }\n  };\n\n  // Handle preset date ranges\n  const handlePresetRange = (preset) => {\n    const today = new Date();\n    let start, end;\n    \n    switch (preset) {\n      case '1year':\n        start = new Date(today.getFullYear() - 1, today.getMonth(), today.getDate());\n        end = today;\n        break;\n      case '2years':\n        start = new Date(today.getFullYear() - 2, today.getMonth(), today.getDate());\n        end = today;\n        break;\n      case '5years':\n        start = new Date(today.getFullYear() - 5, today.getMonth(), today.getDate());\n        end = today;\n        break;\n      case 'all':\n        if (processedData.length > 0) {\n          start = new Date(processedData[0].date);\n          end = new Date(processedData[processedData.length - 1].date);\n        }\n        break;\n      default:\n        return;\n    }\n    \n    if (start && end) {\n      setStartDate(start.toISOString().split('T')[0]);\n      setEndDate(end.toISOString().split('T')[0]);\n      setCurrentYear(start.getFullYear());\n    }\n  };\n\n  // Get current year display\n  const getCurrentYearDisplay = () => {\n    if (startDate && endDate) {\n      const startYear = new Date(startDate).getFullYear();\n      const endYear = new Date(endDate).getFullYear();\n      if (startYear === endYear) {\n        return `${startYear}`;\n      } else {\n        return `${startYear}-${endYear}`;\n      }\n    }\n    return currentYear ? `${currentYear}` : 'Loading...';\n  };\n\n  // Custom tooltip for price chart with difference values\n  const PriceTooltip = ({ active, payload, label }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      const date = new Date(data.date).toLocaleDateString();\n      \n      return (\n        <div style={{\n          background: 'rgba(30, 30, 30, 0.95)',\n          border: '1px solid rgba(255, 255, 255, 0.2)',\n          borderRadius: '8px',\n          padding: '12px',\n          boxShadow: '0 4px 12px rgba(0, 0, 0, 0.4)',\n          color: '#ffffff',\n          minWidth: '200px'\n        }}>\n          <div style={{ fontWeight: '600', marginBottom: '8px', color: '#ffffff' }}>\n            {date}\n          </div>\n          <div style={{ marginBottom: '8px', color: '#ffffff', fontSize: '1.1rem' }}>\n            <strong>Price:</strong> ${data.price.toFixed(2)}\n          </div>\n          {selectedSMAs.map(sma => {\n            const value = data[`sma${sma}`];\n            const diff = data[`diff${sma}`];\n            if (value !== null) {\n              return (\n                <div key={sma} style={{ marginBottom: '6px' }}>\n                  <div style={{ color: smaColors[sma], fontWeight: '600' }}>\n                    <strong>SMA {sma}:</strong> ${value.toFixed(2)}\n                  </div>\n                  <div style={{ \n                    color: diff >= 0 ? '#2ed573' : '#ff4757',\n                    fontSize: '0.9rem',\n                    marginLeft: '10px'\n                  }}>\n                    <strong>Diff:</strong> {diff >= 0 ? '+' : ''}{diff.toFixed(2)}%\n                  </div>\n                </div>\n              );\n            }\n            return null;\n          })}\n        </div>\n      );\n    }\n    return null;\n  };\n\n  // Custom tooltip for percentage chart with synchronized data\n  const PercentageTooltip = ({ active, payload, label }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      const date = new Date(data.date).toLocaleDateString();\n      \n      return (\n        <div style={{\n          background: 'rgba(30, 30, 30, 0.95)',\n          border: '1px solid rgba(255, 255, 255, 0.2)',\n          borderRadius: '8px',\n          padding: '12px',\n          boxShadow: '0 4px 12px rgba(0, 0, 0, 0.4)',\n          color: '#ffffff',\n          minWidth: '200px'\n        }}>\n          <div style={{ fontWeight: '600', marginBottom: '8px', color: '#ffffff' }}>\n            {date}\n          </div>\n          <div style={{ marginBottom: '8px', color: '#ffffff', fontSize: '1.1rem' }}>\n            <strong>Price:</strong> ${data.price.toFixed(2)}\n          </div>\n          {selectedSMAs.map(sma => {\n            const value = data[`sma${sma}`];\n            const diff = data[`diff${sma}`];\n            if (diff !== null) {\n              return (\n                <div key={sma} style={{ marginBottom: '6px' }}>\n                  <div style={{ color: smaColors[sma], fontWeight: '600' }}>\n                    <strong>SMA {sma}:</strong> ${value ? value.toFixed(2) : 'N/A'}\n                  </div>\n                  <div style={{ \n                    color: diff >= 0 ? '#2ed573' : '#ff4757',\n                    fontSize: '0.9rem',\n                    marginLeft: '10px',\n                    fontWeight: '600'\n                  }}>\n                    <strong>Diff:</strong> {diff >= 0 ? '+' : ''}{diff.toFixed(2)}%\n                  </div>\n                </div>\n              );\n            }\n            return null;\n          })}\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <GraphContainer>\n      <Header>\n        <BackButton onClick={onBack}>\n          <ArrowLeft size={20} />\n          Back to Search\n        </BackButton>\n        <Title>\n          <BarChart3 size={32} color=\"#667eea\" />\n          {company?.ticker} - SMA Analysis\n        </Title>\n        <div></div>\n      </Header>\n\n      \n      <TimeRangeSelector>\n        <TimeRangeTitle>Time Range</TimeRangeTitle>\n        <TimeRangeInputs>\n          <DateInput\n            type=\"date\"\n            value={startDate}\n            onChange={(e) => handleDateRangeChange(e.target.value, endDate)}\n          />\n          <span style={{ color: '#cccccc' }}>to</span>\n          <DateInput\n            type=\"date\"\n            value={endDate}\n            onChange={(e) => handleDateRangeChange(startDate, e.target.value)}\n          />\n        </TimeRangeInputs>\n        <PresetButtons>\n          <PresetButton onClick={() => handlePresetRange('1year')}>1 Year</PresetButton>\n          <PresetButton onClick={() => handlePresetRange('2years')}>2 Years</PresetButton>\n          <PresetButton onClick={() => handlePresetRange('5years')}>5 Years</PresetButton>\n          <PresetButton onClick={() => handlePresetRange('all')}>All Data</PresetButton>\n        </PresetButtons>\n      </TimeRangeSelector>\n\n      <SMALegend>\n        <LegendTitle>Select SMAs to Display</LegendTitle>\n        <SMAList>\n          {availableSMAs.map(sma => (\n            <SMAButton\n              key={sma}\n              active={selectedSMAs.includes(sma)}\n              onClick={() => toggleSMA(sma)}\n              style={{ borderColor: smaColors[sma] }}\n            >\n              <div \n                style={{ \n                  width: '12px', \n                  height: '12px', \n                  backgroundColor: smaColors[sma], \n                  borderRadius: '50%' \n                }} \n              />\n              SMA {sma}\n            </SMAButton>\n          ))}\n        </SMAList>\n      </SMALegend>\n\n      <ScrollContainer \n        ref={priceChartRef}\n        onScroll={() => handleScroll(priceChartRef, percentageChartRef)}\n      >\n        <ScrollIndicator>\n          {filteredData.length} data points\n        </ScrollIndicator>\n        <ChartWrapper minWidth={`${Math.max(filteredData.length * 4, 1200)}px`}>\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <ComposedChart \n              data={filteredData}\n              syncId=\"smaCharts\"\n              onMouseMove={(data, index) => handleSynchronizedHover(data, index)}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"rgba(255, 255, 255, 0.1)\" />\n              <XAxis \n                dataKey=\"date\" \n                tick={{ fontSize: 12, fill: '#cccccc' }}\n                tickFormatter={(value) => new Date(value).toLocaleDateString()}\n                stroke=\"#cccccc\"\n              />\n              <YAxis \n                tick={{ fontSize: 12, fill: '#cccccc' }}\n                tickFormatter={(value) => `$${value.toFixed(0)}`}\n                stroke=\"#cccccc\"\n                domain={[priceScale.min, priceScale.max]}\n              />\n              <Tooltip content={<PriceTooltip />} />\n              \n              <Line \n                type=\"monotone\" \n                dataKey=\"price\" \n                stroke=\"#ffffff\" \n                strokeWidth={4}\n                dot={false}\n                name=\"Price\"\n                strokeOpacity={0.9}\n                activeDot={{ r: 8, fill: '#ffffff', stroke: '#ffffff', strokeWidth: 3 }}\n              />\n              \n              {selectedSMAs.map(sma => (\n                <Line \n                  key={sma}\n                  type=\"monotone\" \n                  dataKey={`sma${sma}`} \n                  stroke={smaColors[sma]} \n                  strokeWidth={4}\n                  dot={false}\n                  name={`SMA ${sma}`}\n                  strokeOpacity={0.9}\n                  activeDot={{ r: 8, fill: smaColors[sma], stroke: smaColors[sma], strokeWidth: 3 }}\n                />\n              ))}\n            </ComposedChart>\n          </ResponsiveContainer>\n        </ChartWrapper>\n      </ScrollContainer>\n\n      {/* Percentage Difference Chart */}\n      <div style={{ marginTop: '30px' }}>\n        <div style={{ \n          color: '#ffffff', \n          fontSize: '1.2rem', \n          fontWeight: '600', \n          marginBottom: '15px',\n          display: 'flex',\n          alignItems: 'center',\n          gap: '10px'\n        }}>\n          <TrendingUp size={24} color=\"#ff6b6b\" />\n          Percentage Differences: (Price - SMA) / SMA × 100%\n        </div>\n        \n        <ScrollContainer \n          ref={percentageChartRef}\n          onScroll={() => handleScroll(percentageChartRef, priceChartRef)}\n        >\n          <ScrollIndicator>\n            {filteredData.length} data points\n          </ScrollIndicator>\n          <ChartWrapper minWidth={`${Math.max(filteredData.length * 4, 1200)}px`}>\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <ComposedChart \n                data={filteredData}\n                syncId=\"smaCharts\"\n                onMouseMove={(data, index) => handleSynchronizedHover(data, index)}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"rgba(255, 255, 255, 0.1)\" />\n                <XAxis \n                  dataKey=\"date\" \n                  tick={{ fontSize: 12, fill: '#cccccc' }}\n                  tickFormatter={(value) => new Date(value).toLocaleDateString()}\n                  stroke=\"#cccccc\"\n                />\n                <YAxis \n                  tick={{ fontSize: 12, fill: '#cccccc' }}\n                  tickFormatter={(value) => `${value.toFixed(1)}%`}\n                  stroke=\"#cccccc\"\n                  domain={[percentageScale.min, percentageScale.max]}\n                />\n                <Tooltip content={<PercentageTooltip />} />\n                \n                {/* Zero line */}\n                <Line \n                  type=\"monotone\" \n                  dataKey={() => 0} \n                  stroke=\"#666\" \n                  strokeDasharray=\"5 5\"\n                  strokeWidth={1}\n                  dot={false}\n                />\n                \n                {/* Percentage difference lines for each SMA */}\n                {selectedSMAs.map(sma => (\n                  <Line \n                    key={sma}\n                    type=\"monotone\" \n                    dataKey={`diff${sma}`} \n                    stroke={smaColors[sma]} \n                    strokeWidth={4}\n                    dot={false}\n                    name={`SMA ${sma} Diff`}\n                    strokeOpacity={0.9}\n                    activeDot={{ r: 8, fill: smaColors[sma], stroke: smaColors[sma], strokeWidth: 3 }}\n                  />\n                ))}\n              </ComposedChart>\n            </ResponsiveContainer>\n          </ChartWrapper>\n        </ScrollContainer>\n      </div>\n    </GraphContainer>\n  );\n};\n\nexport default SMAGraph;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,OAAO,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACnE,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,EAAEC,WAAW,EAAEC,YAAY,QAAQ,cAAc;AAChH,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,mBAAmB,EAAEC,aAAa,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErH,MAAMC,cAAc,GAAGlB,MAAM,CAACmB,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAPIF,cAAc;AASpB,MAAMG,MAAM,GAAGrB,MAAM,CAACmB,GAAG;AACzB;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GALID,MAAM;AAOZ,MAAME,UAAU,GAAGvB,MAAM,CAACwB,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAnBIF,UAAU;AAqBhB,MAAMG,KAAK,GAAG1B,MAAM,CAAC2B,EAAE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAVIF,KAAK;AAYX,MAAMG,aAAa,GAAG7B,MAAM,CAACmB,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMW,iBAAiB,GAAG9B,MAAM,CAACmB,GAAG;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACY,GAAA,GAVID,iBAAiB;AAYvB,MAAME,cAAc,GAAGhC,MAAM,CAACiC,EAAE;AAChC;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,cAAc;AAMpB,MAAMG,eAAe,GAAGnC,MAAM,CAACmB,GAAG;AAClC;AACA;AACA;AACA;AACA,CAAC;AAACiB,GAAA,GALID,eAAe;AAOrB,MAAME,aAAa,GAAGrC,MAAM,CAACmB,GAAG;AAChC;AACA;AACA;AACA;AACA,CAAC;AAACmB,GAAA,GALID,aAAa;AAOnB,MAAME,YAAY,GAAGvC,MAAM,CAACwB,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACgB,GAAA,GAdID,YAAY;AAgBlB,MAAME,SAAS,GAAGzC,MAAM,CAAC0C,KAAK;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAZIF,SAAS;AAcf,MAAMG,SAAS,GAAG5C,MAAM,CAACmB,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC0B,GAAA,GAPID,SAAS;AASf,MAAME,WAAW,GAAG9C,MAAM,CAAC+C,EAAE;AAC7B;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GALIF,WAAW;AAOjB,MAAMG,OAAO,GAAGjD,MAAM,CAACmB,GAAG;AAC1B;AACA;AACA;AACA,CAAC;AAAC+B,IAAA,GAJID,OAAO;AAMb,MAAME,SAAS,GAAGnD,MAAM,CAACwB,MAAM;AAC/B;AACA,gBAAgB4B,KAAK,IAAIA,KAAK,CAACC,MAAM,GAAG,2BAA2B,GAAG,2BAA2B;AACjG,sBAAsBD,KAAK,IAAIA,KAAK,CAACC,MAAM,GAAG,0BAA0B,GAAG,0BAA0B;AACrG;AACA,WAAWD,KAAK,IAAIA,KAAK,CAACC,MAAM,GAAG,SAAS,GAAG,0BAA0B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAnBIH,SAAS;AAqBf,MAAMI,eAAe,GAAGvD,MAAM,CAACmB,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}